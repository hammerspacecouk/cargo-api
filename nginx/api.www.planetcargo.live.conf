server {
    # Listen to correct ports
    listen 80 default_server;
    listen [::]:80 default_server;

    # lightweight health check for load balancer
    location = /health-alb {
        access_log off;
        return 200 'A-OK!';
        default_type text/plain;
    }

    # Everything else 404 without logs
    location = / {
        access_log off;
        return 404 'Nothing here';
        default_type text/plain;
    }
}

# App Server
server {
    # Domains we are interested in
    server_name api.www.planetcargo.live api.beta.planetcargo.live api.alpha.planetcargo.live api.dev.planetcargo.live;

    # Listen to correct ports
    listen 80;
    listen [::]:80;

    keepalive_timeout 60;
    default_type text/html;
    charset UTF-8;

    # Path to public root
    root /var/www/public;

    # Not wise to tell the world exactly what version of software you are using
    server_tokens off;

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain application/json;

    # Don't log favicons
    location = /favicon.ico {
        return 404;
        access_log off;
        log_not_found off;
    }

    # Don't serve hidden files
    location ~ /\. {
        return 404;
        access_log off;
        log_not_found off;
    }

    # Run the Front Controller as PHP
    location ~ ^/index\.php(/|$) {
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        fastcgi_pass api-php:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        internal;

        fastcgi_buffers  16 16k;
        fastcgi_buffer_size  32k;

        # CORS CHECKS
        set $cors "no";
        if ($http_origin ~* "^https?://(www|beta|alpha|dev)\.planetcargo\.live$") {
            set $cors "cors";
        }

        if ($request_method = 'OPTIONS') {
            set $cors "${cors}options";
        }

        # if it's a GET or POST, set the standard CORS responses header
        if ($cors = "cors") {
            add_header access-control-allow-origin $http_origin always;
            add_header access-control-allow-credentials 'true' always;
            add_header access-control-allow-methods 'POST, GET, OPTIONS' always;
        }

        # if it's OPTIONS, then it's a CORS preflight request so respond immediately with no response body
        if ($cors = "corsoptions") {
            add_header access-control-allow-origin $http_origin always;
            add_header access-control-allow-credentials 'true' always;
            add_header access-control-allow-methods 'POST, GET, OPTIONS' always;
            add_header access-control-allow-headers 'content-type,accept,origin' always;
            add_header access-control-max-age 600;

            # send a successful empty response
            add_header content-length 0;
            add_header content-type 'text/plain charset=UTF-8';
            return 204;
        }
    }

    # Do not allow direct navigation to .php files
    location ~ \.php$ {
        return 404;
        access_log off;
        log_not_found off;
    }

    # Send all URLs to the front controller if the file doesn't exist directly
    location / {
        # try to serve file directly, fallback to app.php
        try_files $uri /index.php$is_args$args;
    }
}
