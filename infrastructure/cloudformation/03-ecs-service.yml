Parameters:
  ALBStack:
    Type: String

  ClusterStack:
    Type: String

  DesiredTaskCount:
    Type: Number
    Default: 1

  ECSRepository:
    Type: String

  Environment:
    Type: String
    Default: prod

  ImageTag:
    Type: String
    Default: latest

  NginxImageTag:
    Type: String
    Default: latest

Resources:
  ECSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole


  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Fn::ImportValue: !Sub "${ClusterStack}::ClusterName"
      Role: !Ref ECSServiceRole
      DesiredCount: !Ref DesiredTaskCount
      TaskDefinition: !Ref TaskDefinition
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      LoadBalancers:
        - ContainerName: cargo-api-nginx
          ContainerPort: 80
          TargetGroupArn:
            Fn::ImportValue: !Sub "${ALBStack}::TargetGroup"

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      TaskRoleArn: !Ref TaskDefinitionRole
      Family: planet-cargo-api
      ContainerDefinitions:
        - Name: cargo-api-php
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECSRepository}:${ImageTag}
          Cpu: 64
          Memory: 128
          Essential: false
          Environment:
            - Name: APP_VERSION
              Value: !Ref ImageTag
            - Name: APP_ENV
              Value: !Ref Environment
          PortMappings:
            - ContainerPort: 9000
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub ${CloudWatchPHP}
              awslogs-region: !Sub ${AWS::Region}
              awslogs-stream-prefix: cargo-ecs-php
          Command:
            - "sh"
            - "-c"
            - "/var/www/bin/init-ecs.sh && php-fpm"
        - Name: cargo-api-nginx
          Image: !Ref NginxImageTag
          Cpu: 64
          Memory: 128
          Essential: true
          Environment:
            - Name: APP_ENV
              Value: !Ref Environment
          Links:
            - cargo-api-php
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub ${CloudWatchNginx}
              awslogs-region: !Sub ${AWS::Region}
              awslogs-stream-prefix: cargo-ecs-nginx
          VolumesFrom:
            - SourceContainer: cargo-api-php
              ReadOnly: true
