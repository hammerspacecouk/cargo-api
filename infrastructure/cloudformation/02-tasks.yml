AWSTemplateFormatVersion: 2010-09-09
Description: >
  Task definitions for running the API

Parameters:

  Environment:
    Type: String
    AllowedValues:
      - alpha
      - beta
      - prod
    Default: prod

  ECSRepository:
    Type: String

  ECSNginxRepository:
    Type: String

Resources:

  CloudWatchPHP:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${Environment}-cargo-api-php
      RetentionInDays: 30

  CloudWatchNginx:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${Environment}-cargo-api-nginx
      RetentionInDays: 30

  TaskDefinitionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /


  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  TaskExecutionRolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-ECR
      Roles:
        - !Ref TaskExecutionRole
        - !Ref TaskDefinitionRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - ssm:GetParameterHistory
              - ssm:GetParameter
              - ssm:GetParameters
              - ssm:GetParametersByPath
            Resource:
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/api/${Environment}/*
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Environment}/*

  APITaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      TaskRoleArn: !Ref TaskDefinitionRole
      ExecutionRoleArn: !Ref TaskExecutionRole
      Family: !Sub ${AWS::StackName}-api
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 1024
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: cargo-api-php
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECSRepository}:latest
          Cpu: 192
          Memory: 128
          Essential: true
          Environment:
            - Name: APP_ENV
              Value: !Ref Environment
            - Name: PARAM_PATH
              Value: !Sub ${Environment}
          Secrets:
            - Name: APP_CONFIG
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/api/${Environment}/APP_CONFIG
            - Name: APP_SECRETS
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/api/${Environment}/APP_SECRETS
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub ${CloudWatchPHP}
              awslogs-region: !Sub ${AWS::Region}
              awslogs-stream-prefix: api
        - Name: cargo-api-nginx
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECSNginxRepository}:latest
          Cpu: 64
          Memory: 128
          Essential: true
          Environment:
            - Name: APP_ENV
              Value: !Ref Environment
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub ${CloudWatchNginx}
              awslogs-region: !Sub ${AWS::Region}
              awslogs-stream-prefix: nginx

  ArrivalsTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      TaskRoleArn: !Ref TaskDefinitionRole
      ExecutionRoleArn: !Ref TaskExecutionRole
      Family: !Sub ${AWS::StackName}-arrivals
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 1024
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: cargo-api-php
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECSRepository}:latest
          Cpu: 64
          Memory: 128
          Environment:
            - Name: APP_ENV
              Value: !Ref Environment
            - Name: PARAM_PATH
              Value: !Sub ${Environment}
          Secrets:
            - Name: APP_CONFIG
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/api/${Environment}/APP_CONFIG
            - Name: APP_SECRETS
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/api/${Environment}/APP_SECRETS
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub ${CloudWatchPHP}
              awslogs-region: !Sub ${AWS::Region}
              awslogs-stream-prefix: arrivals
          Command:
            - "bin/console"
            - "game:worker:arrival"

  CleanerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      TaskRoleArn: !Ref TaskDefinitionRole
      ExecutionRoleArn: !Ref TaskExecutionRole
      Family: !Sub ${AWS::StackName}-cleaner
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 1024
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: cargo-api-php
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECSRepository}:latest
          Cpu: 64
          Memory: 128
          Environment:
            - Name: APP_ENV
              Value: !Ref Environment
            - Name: PARAM_PATH
              Value: !Sub ${Environment}
          Secrets:
            - Name: APP_CONFIG
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/api/${Environment}/APP_CONFIG
            - Name: APP_SECRETS
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/api/${Environment}/APP_SECRETS
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub ${CloudWatchPHP}
              awslogs-region: !Sub ${AWS::Region}
              awslogs-stream-prefix: cleaner
          Command:
            - "bin/console"
            - "game:worker:cleaner"

  DataTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      TaskRoleArn: !Ref TaskDefinitionRole
      ExecutionRoleArn: !Ref TaskExecutionRole
      Family: !Sub ${AWS::StackName}-data
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 1024
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: cargo-api-php
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECSRepository}:latest
          Cpu: 64
          Memory: 128
          Environment:
            - Name: APP_ENV
              Value: !Ref Environment
            - Name: PARAM_PATH
              Value: !Sub ${Environment}
          Secrets:
            - Name: APP_CONFIG
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/api/${Environment}/APP_CONFIG
            - Name: APP_SECRETS
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/api/${Environment}/APP_SECRETS
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub ${CloudWatchPHP}
              awslogs-region: !Sub ${AWS::Region}
              awslogs-stream-prefix: data
          Command:
            - "bin/console"
            - "game:init:make-data"

  MigrationsTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      TaskRoleArn: !Ref TaskDefinitionRole
      ExecutionRoleArn: !Ref TaskExecutionRole
      Family: !Sub ${AWS::StackName}-migrations
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 1024
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: cargo-api-php
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECSRepository}:latest
          Cpu: 64
          Memory: 128
          Environment:
            - Name: APP_ENV
              Value: !Ref Environment
            - Name: PARAM_PATH
              Value: !Sub ${Environment}
          Secrets:
            - Name: APP_CONFIG
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/api/${Environment}/APP_CONFIG
            - Name: APP_SECRETS
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/api/${Environment}/APP_SECRETS
            - Name: DATABASE_URL
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/api/${Environment}/DATABASE_URL_DDL
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub ${CloudWatchPHP}
              awslogs-region: !Sub ${AWS::Region}
              awslogs-stream-prefix: migrations
          Command:
            - "bin/console"
            - "doctrine:migrations:migrate"
            - "-n"

  TimedTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      TaskRoleArn: !Ref TaskDefinitionRole
      ExecutionRoleArn: !Ref TaskExecutionRole
      Family: !Sub ${AWS::StackName}-timed
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 1024
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: cargo-api-php
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECSRepository}:latest
          Cpu: 64
          Memory: 128
          Environment:
            - Name: APP_ENV
              Value: !Ref Environment
            - Name: PARAM_PATH
              Value: !Sub ${Environment}
          Secrets:
            - Name: APP_CONFIG
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/api/${Environment}/APP_CONFIG
            - Name: APP_SECRETS
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/api/${Environment}/APP_SECRETS
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub ${CloudWatchPHP}
              awslogs-region: !Sub ${AWS::Region}
              awslogs-stream-prefix: timed
          Command:
            - "bin/console"
            - "game:worker:timed"

Outputs:
  ExecutionRoleArn:
    Value: !GetAtt TaskExecutionRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}::ExecutionRoleArn

  APITask:
    Value: !Ref APITaskDefinition
    Export:
      Name: !Sub ${AWS::StackName}::APITask

  ArrivalsTask:
    Value: !Ref ArrivalsTaskDefinition
    Export:
      Name: !Sub ${AWS::StackName}::ArrivalsTask

  CleanerTask:
    Value: !Ref CleanerTaskDefinition
    Export:
      Name: !Sub ${AWS::StackName}::CleanerTask

  MigrationsTask:
    Value: !Ref MigrationsTaskDefinition
    Export:
      Name: !Sub ${AWS::StackName}::MigrationsTask

  TimedTask:
    Value: !Ref TimedTaskDefinition
    Export:
      Name: !Sub ${AWS::StackName}::TimedTask

